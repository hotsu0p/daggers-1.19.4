{
    "sourceFile": "src/main/java/hotsuop/daggers/entities/throwable/ThrownDaggerEntity.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1718474119316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1718474146104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n package hotsuop.daggers.entities.throwable;\r\n \r\n+import hotsuop.daggers.Daggers;\r\n import net.minecraft.entity.EntityType;\r\n import net.minecraft.entity.LivingEntity;\r\n import net.minecraft.entity.damage.DamageSource;\r\n import net.minecraft.entity.projectile.PersistentProjectileEntity;\r\n@@ -14,16 +15,15 @@\n import net.minecraft.util.hit.EntityHitResult;\r\n import net.minecraft.util.hit.HitResult;\r\n import net.minecraft.util.math.Vec3d;\r\n import net.minecraft.world.World;\r\n-import daggers.item.DaggerItem;\r\n \r\n public class ThrownDaggerEntity extends PersistentProjectileEntity {\r\n     private ItemStack daggerStack;\r\n \r\n     public ThrownDaggerEntity(EntityType<? extends PersistentProjectileEntity> entityType, World world) {\r\n         super(entityType, world);\r\n-        this.daggerStack = new ItemStack(daggers.daggers.WOODEN_DAGGER);\r\n+        this.daggerStack = new ItemStack(Daggers.WOODEN_DAGGER);\r\n     }\r\n \r\n     public ThrownDaggerEntity(World world, LivingEntity owner, ItemStack stack) {\r\n         super(((DaggerItem) stack.getItem()).getType(), owner, world);\r\n"
                }
            ],
            "date": 1718474119316,
            "name": "Commit-0",
            "content": "package hotsuop.daggers.entities.throwable;\r\n\r\nimport net.minecraft.entity.EntityType;\r\nimport net.minecraft.entity.LivingEntity;\r\nimport net.minecraft.entity.damage.DamageSource;\r\nimport net.minecraft.entity.projectile.PersistentProjectileEntity;\r\nimport net.minecraft.item.ItemStack;\r\nimport net.minecraft.nbt.NbtCompound;\r\nimport net.minecraft.network.PacketByteBuf;\r\nimport net.minecraft.network.listener.ClientPlayPacketListener;\r\nimport net.minecraft.network.packet.s2c.play.EntitySpawnS2CPacket;\r\nimport net.minecraft.sound.SoundEvent;\r\nimport net.minecraft.sound.SoundEvents;\r\nimport net.minecraft.util.hit.EntityHitResult;\r\nimport net.minecraft.util.hit.HitResult;\r\nimport net.minecraft.util.math.Vec3d;\r\nimport net.minecraft.world.World;\r\nimport daggers.item.DaggerItem;\r\n\r\npublic class ThrownDaggerEntity extends PersistentProjectileEntity {\r\n    private ItemStack daggerStack;\r\n\r\n    public ThrownDaggerEntity(EntityType<? extends PersistentProjectileEntity> entityType, World world) {\r\n        super(entityType, world);\r\n        this.daggerStack = new ItemStack(daggers.daggers.WOODEN_DAGGER);\r\n    }\r\n\r\n    public ThrownDaggerEntity(World world, LivingEntity owner, ItemStack stack) {\r\n        super(((DaggerItem) stack.getItem()).getType(), owner, world);\r\n        this.daggerStack = stack;\r\n    }\r\n\r\n    @Override\r\n    public Packet<ClientPlayPacketListener> createSpawnPacket() {\r\n        return new EntitySpawnS2CPacket(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onCollision(HitResult hitResult) {\r\n        super.onCollision(hitResult);\r\n        if (!this.world.isClient) {\r\n            this.world.sendEntityStatus(this, (byte) 3);\r\n            this.remove(RemovalReason.DISCARDED);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onEntityHit(EntityHitResult entityHitResult) {\r\n        super.onEntityHit(entityHitResult);\r\n        if (entityHitResult.getEntity() instanceof LivingEntity) {\r\n            entityHitResult.getEntity().damage(DamageSource.thrownProjectile(this, this.getOwner()), 8.0F); // Adjust damage as needed\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected ItemStack asItemStack() {\r\n        return this.daggerStack;\r\n    }\r\n\r\n    @Override\r\n    public void writeCustomDataToNbt(NbtCompound nbt) {\r\n        super.writeCustomDataToNbt(nbt);\r\n        nbt.put(\"Dagger\", this.daggerStack.writeNbt(new NbtCompound()));\r\n    }\r\n\r\n    @Override\r\n    public void readCustomDataFromNbt(NbtCompound nbt) {\r\n        super.readCustomDataFromNbt(nbt);\r\n        this.daggerStack = ItemStack.fromNbt(nbt.getCompound(\"Dagger\"));\r\n    }\r\n}\r\n"
        }
    ]
}